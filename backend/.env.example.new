# =============================================================================
# HealConnect Backend Environment Configuration Template
# =============================================================================

# IMPORTANT: Copy this file to .env and fill in your actual values
# Never commit the actual .env file to version control

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
NODE_ENV=development
PORT=9000

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Replace with your actual MongoDB connection string
# Local MongoDB (recommended for development)
MONGODB_URI=mongodb://localhost:27017/healconnect_db

# MongoDB Atlas example (for production)
# MONGODB_URI=mongodb+srv://<username>:<password>@cluster.mongodb.net/healconnect_db?retryWrites=true&w=majority

# =============================================================================
# JWT SECURITY CONFIGURATION
# =============================================================================
# Generate a strong, unique secret key (minimum 32 characters)
# Use: openssl rand -base64 32
# Or visit: https://generate-secret.vercel.app/32
JWT_SECRET=your-super-secret-jwt-key-minimum-32-characters-long
JWT_EXPIRE=7d

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
# Frontend URL (adjust port if different)
CORS_ORIGIN=http://localhost:8080

# =============================================================================
# EMAIL CONFIGURATION (Gmail)
# =============================================================================
# Replace with your actual Gmail credentials
EMAIL_USER=your-email@gmail.com
EMAIL_PASS=your-gmail-app-password

# How to get Gmail App Password:
# 1. Go to Google Account settings
# 2. Enable 2-Factor Authentication
# 3. Go to Security > App passwords
# 4. Generate a password for "Mail"
# 5. Use that generated password as EMAIL_PASS (not your regular password)

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================
MAX_FILE_SIZE=10mb

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. Copy this file to .env: cp .env.example .env
# 2. Fill in all the required values above
# 3. Install MongoDB locally or set up MongoDB Atlas
# 4. Generate a strong JWT secret
# 5. Set up Gmail app password for email functionality
# 6. Start the development server: npm run dev

# =============================================================================
# SECURITY REMINDERS
# =============================================================================

# ✅ DO:
# - Use strong, unique passwords
# - Generate a random JWT secret
# - Use MongoDB Atlas for production
# - Enable 2FA on your Gmail account
# - Keep your .env file private

# ❌ DON'T:
# - Commit .env files to version control
# - Use weak or default passwords
# - Share your credentials
# - Use the same JWT secret across projects
# - Use your regular Gmail password